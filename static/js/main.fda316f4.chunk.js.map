{"version":3,"sources":["components/TimezoneDisplay.js","components/TimezoneSelect.js","components/ClockPage.js","hooks/useLocalStorage.js","components/TimerPage.js","components/StopwatchPage.js","components/myRoutes.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","marginVert","marginTop","marginBottom","TimezoneDisplay","timezone","classes","useState","ct","getTimezone","timezoneInfo","getCountry","country","countryInfo","utcOffset","Date","getTimezoneOffset","totalMin","Math","abs","hours","floor","minutes","result","push","join","prettyOffset","offsetString","time","setTime","updateClock","moment","tz","format","getSimpleTime","useEffect","interval","setInterval","clearInterval","Grid","container","spacing","className","item","xs","Typography","variant","name","style","textAlign","appBar","position","title","marginLeft","flex","paddingTop","Transition","React","forwardRef","props","ref","Slide","direction","TimezoneSelect","open","onClose","getAllTimezones","timezones","listItems","setListItems","inputEl","useRef","input","setInput","handleClose","payload","normalisedInput","toLowerCase","replaceAll","filteredTimezones","Object","values","filter","includes","map","ListItem","button","onClick","ListItemText","primary","secondary","Dialog","fullScreen","TransitionComponent","AppBar","color","Toolbar","IconButton","edge","aria-label","InputBase","inputRef","value","placeholder","autoFocus","paddingLeft","width","onChange","e","target","current","focus","Container","fontSize","List","slice","letterSpacing","fab","transform","bottom","left","zIndex","centerText","ClockPage","date","setDate","showTimezoneSelect","setShowTimezoneSelect","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","userTimezones","setUserTimezones","Divider","onDrop","removedIndex","addedIndex","items","arrayMove","dragBeginDelay","Fab","old","TimerPage","margin","StopwatchPage","myRoutes","clock","timer","stopwatch","root","flexGrow","menuButton","marginRight","appbar","stickToBottom","getTabIndexByHash","indexOf","window","location","hash","App","anchorEl","setAnchorEl","bottomNavIndex","setBottomNavIndex","pageNames","Boolean","hashChange","addEventListener","removeEventListener","basename","elevation","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","clear","reload","exact","path","component","BottomNavigation","newValue","showLabels","BottomNavigationAction","Link","to","label","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","backgroundColor","createMuiTheme","palette","type","main","background","default","paper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.fda316f4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment-timezone\";\nimport ct from \"countries-and-timezones\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginVert: {\n        marginTop: \"16px\",\n        marginBottom: \"16px\",\n    },\n}));\n\nfunction getSimpleTime(timezone) {\n    return timezone\n        ? moment().tz(timezone).format(\"HH:mm\")\n        : moment().format(\"HH:mm\");\n}\n\nfunction prettyOffset(utcOffset) {\n    utcOffset += new Date().getTimezoneOffset();\n    const totalMin = Math.abs(utcOffset);\n    var hours = Math.floor(totalMin / 60);\n    var minutes = totalMin % 60;\n    var result = [];\n    if (hours > 0) {\n        result.push(`${hours} hr`);\n    }\n    if (minutes > 0) {\n        result.push(`${hours} min`);\n    }\n    if (utcOffset === 0) return \"Now\";\n    if (utcOffset < 0) return `Yesterday, ${result.join(\" \")} behind`;\n    if (utcOffset > 0) return `Tomorrow, ${result.join(\" \")} behind`;\n}\n\nfunction TimezoneDisplay({ timezone }) {\n    const classes = useStyles();\n    const [timezoneInfo, setTimezoneInfo] = useState(() => {\n        return ct.getTimezone(timezone);\n    });\n    const [countryInfo, setCountryInfo] = useState(() => {\n        return ct.getCountry(timezoneInfo.country);\n    });\n    const [offsetString, setOffsetString] = useState(() => {\n        return prettyOffset(timezoneInfo.utcOffset);\n    });\n    const [time, setTime] = useState(\"\");\n\n    function updateClock() {\n        setTime(getSimpleTime(timezone));\n    }\n\n    useEffect(() => {\n        var interval = setInterval(updateClock, 10);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <Grid container spacing={1} className={classes.marginVert}>\n            <Grid item xs={6}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">{countryInfo.name}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"caption\">\n                            {offsetString}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={6} style={{ textAlign: \"end\" }}>\n                <Typography variant=\"h3\">{time}</Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default TimezoneDisplay;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ct from \"countries-and-timezones\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    paddingTop: {\n        paddingTop: \"28px\",\n    },\n}));\n\nfunction getSimpleTime(timezone) {\n    return timezone\n        ? moment().tz(timezone).format(\"HH:mm\")\n        : moment().format(\"HH:mm\");\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function TimezoneSelect({ open, onClose }) {\n    const classes = useStyles();\n\n    const [timezones, setTimezones] = useState(() => ct.getAllTimezones());\n    const [listItems, setListItems] = useState(() => []);\n    const inputEl = useRef(null);\n\n    const [input, setInput] = useState(() => \"\");\n\n    function handleClose(payload) {\n        setInput(\"\");\n        onClose(payload);\n    }\n\n    useEffect(() => {\n        if (input === \"\") {\n            setListItems([]);\n            return;\n        }\n        const normalisedInput = input\n            .toLowerCase()\n            .replaceAll(\"/\", \"\")\n            .replaceAll(\" \", \"\");\n        const filteredTimezones = Object.values(timezones).filter(\n            (timezone) => {\n                return timezone.name\n                    .toLowerCase()\n                    .replaceAll(\"/\", \"\")\n                    .replaceAll(\"_\", \"\")\n                    .includes(normalisedInput);\n            }\n        );\n        return setListItems(\n            filteredTimezones.map((timezone) => {\n                return (\n                    <ListItem\n                        button\n                        key={timezone.name}\n                        onClick={() => handleClose(timezone.name)}\n                    >\n                        <ListItemText\n                            primary={timezone.name\n                                .replaceAll(\"/\", \" - \")\n                                .replaceAll(\"_\", \" \")}\n                            secondary={getSimpleTime(timezone.name)}\n                        />\n                    </ListItem>\n                );\n            })\n        );\n    }, [input]);\n\n    function handleFocusOrClear(shouldFocus) {\n        if (!shouldFocus) {\n            setInput(\"\");\n        }\n        inputEl.current.focus();\n    }\n\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n            onClose={() => handleClose()}\n            TransitionComponent={Transition}\n        >\n            <AppBar className={classes.appBar} color=\"secondary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => handleClose()}\n                        aria-label=\"close\"\n                    >\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <InputBase\n                        inputRef={inputEl}\n                        value={input}\n                        placeholder=\"Search...\"\n                        autoFocus\n                        style={{\n                            paddingLeft: \"16px\",\n                            width: \"100%\",\n                        }}\n                        onChange={(e) => {\n                            setInput(e.target.value);\n                        }}\n                    />\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => handleFocusOrClear(input == \"\")}\n                        aria-label={input == \"\" ? \"search\" : \"clear\"}\n                    >\n                        {input == \"\" ? <SearchIcon /> : <CloseIcon />}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            {input == \"\" && (\n                <Container className={classes.paddingTop}>\n                    <Grid container>\n                        <Grid style={{ textAlign: \"center\" }} xs={12}>\n                            <SearchIcon\n                                fontSize=\"large\"\n                                style={{ fontSize: \"128px\" }}\n                            />\n                        </Grid>\n                        <Grid style={{ textAlign: \"center\" }} xs={12}>\n                            <Typography variant=\"subtitle\">\n                                Search for a region\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Container>\n            )}\n            <Container>\n                <List>{listItems.slice(0, 15)}</List>\n            </Container>\n        </Dialog>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Fab from \"@material-ui/core/Fab\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\n\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TimezoneDisplay from \"./TimezoneDisplay\";\nimport TimezoneSelect from \"./TimezoneSelect\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { Container as DraggableContainer, Draggable } from \"react-smooth-dnd\";\nimport arrayMove from \"array-move\";\n\nconst useStyles = makeStyles((theme) => ({\n    time: {\n        letterSpacing: \"5px\",\n        textAlign: \"center\",\n        fontSize: \"3.5rem\",\n    },\n    fab: {\n        position: \"fixed\",\n        transform: \"TranslateX(-50%)\",\n        bottom: \"72px\",\n        left: \"50%\",\n        zIndex: \"50\",\n    },\n    centerText: {\n        textAlign: \"center\",\n    },\n}));\n\nfunction getSimpleTime() {\n    return moment().format(\"HH:mm:ss\");\n}\nfunction getSimpleDate() {\n    return moment().format(\"ddd, DD MMM\");\n}\n\nfunction ClockPage() {\n    const classes = useStyles();\n    const [time, setTime] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [showTimezoneSelect, setShowTimezoneSelect] = useState(false);\n    const [userTimezones, setUserTimezones] = useLocalStorage(\"timezones\", []);\n    function updateClock() {\n        setTime(getSimpleTime());\n        setDate(getSimpleDate());\n    }\n\n    function handleAddTimezoneIntent() {\n        setShowTimezoneSelect(true);\n    }\n    function handleAddTimezone(timezone) {\n        setShowTimezoneSelect(false);\n        timezone &&\n            setUserTimezones((old) => {\n                if (!old.includes(timezone)) {\n                    return [...old, timezone];\n                }\n                return old;\n            });\n    }\n\n    function onDrop({ removedIndex, addedIndex }) {\n        setUserTimezones((items) => arrayMove(items, removedIndex, addedIndex));\n    }\n\n    useEffect(() => {\n        var interval = setInterval(updateClock, 10);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <Container\n            style={{\n                marginTop: \"16px\",\n            }}\n        >\n            <Container>\n                <Typography\n                    variant=\"h3\"\n                    color=\"primary\"\n                    className={classes.time}\n                >\n                    {time}\n                </Typography>\n                <Typography variant=\"h5\" className={classes.centerText}>\n                    {date}\n                </Typography>\n                <Divider style={{ marginTop: \"16px\" }} />\n            </Container>\n            <Container>\n                <DraggableContainer onDrop={onDrop} dragBeginDelay={200}>\n                    {userTimezones.map((timezone) => {\n                        return (\n                            <Draggable key={timezone}>\n                                <TimezoneDisplay timezone={timezone} />\n                            </Draggable>\n                        );\n                    })}\n\n                    {/* <TimezoneDisplay timezone=\"Asia/Hong_Kong\" />\n                <TimezoneDisplay timezone=\"Europe/London\" />\n                <TimezoneDisplay timezone=\"Asia/Tokyo\" />\n                <TimezoneDisplay timezone=\"Asia/Yangon\" /> */}\n                </DraggableContainer>\n            </Container>\n            <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                className={classes.fab}\n                onClick={handleAddTimezoneIntent}\n            >\n                <LanguageIcon />\n            </Fab>\n            <TimezoneSelect\n                open={showTimezoneSelect}\n                onClose={handleAddTimezone}\n            />\n        </Container>\n    );\n}\n\nexport default ClockPage;\n","import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"clock_feli_page-\";\n\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key;\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue != null) return JSON.parse(jsonValue);\n        if (typeof initialValue === \"function\") return initialValue();\n        return initialValue;\n    });\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\n    }, [prefixedKey, value]);\n\n    return [value, setValue];\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst TimerPage = () => {\n    return (\n        <Container\n            style={{\n                margin: \"16px\",\n            }}\n        >\n            <Typography variant=\"h3\">Coming Soon</Typography>\n        </Container>\n    );\n};\n\nexport default TimerPage;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst StopwatchPage = () => {\n    return (\n        <Container\n            style={{\n                margin: \"16px\",\n            }}\n        >\n            <Typography variant=\"h3\">Coming Soon</Typography>\n        </Container>\n    );\n};\n\nexport default StopwatchPage;\n","const myRoutes = {\n    clock: \"/\",\n    timer: \"/timer\",\n    stopwatch: \"/stopwatch\",\n};\n\nexport default myRoutes;\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Button from \"@material-ui/core/Button\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Card from \"@material-ui/core/Card\";\n// import CardActions from \"@material-ui/core/CardActions\";\n// import CardContent from \"@material-ui/core/CardContent\";\n// import TextField from \"@material-ui/core/TextField\";\n// import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TimerOutlinedIcon from \"@material-ui/icons/TimerOutlined\";\nimport AvTimerOutlinedIcon from \"@material-ui/icons/AvTimerOutlined\";\nimport AccessTimeOutlinedIcon from \"@material-ui/icons/AccessTimeOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport ClockPage from \"./ClockPage\";\nimport TimerPage from \"./TimerPage\";\nimport StopwatchPage from \"./StopwatchPage\";\nimport myRoutes from \"./myRoutes\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    appbar: {\n        // alignItems: \"center\",\n    },\n    stickToBottom: {\n        width: \"100%\",\n        position: \"fixed\",\n        bottom: 0,\n    },\n}));\n\nfunction getTabIndexByHash() {\n    return Object.values(myRoutes).indexOf(window.location.hash.slice(1));\n}\n\nfunction App() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [bottomNavIndex, setBottomNavIndex] = React.useState(() => {\n        return getTabIndexByHash();\n    });\n    const pageNames = [\"Clock\", \"Timer\", \"Stopwatch\"];\n\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    function hashChange() {\n        setBottomNavIndex(getTabIndexByHash());\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"hashchange\", hashChange);\n        return () => {\n            window.removeEventListener(\"hashchange\", hashChange);\n        };\n    }, []);\n\n    return (\n        <HashRouter basename={myRoutes.clock}>\n            <div className={classes.root}>\n                <AppBar\n                    color=\"secondary\"\n                    elevation=\"0\"\n                    position=\"static\"\n                    className={classes.appbar}\n                >\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {pageNames[bottomNavIndex]}\n                        </Typography>\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <MoreVertIcon></MoreVertIcon>\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>\n                                    Screensaver\n                                </MenuItem>\n                                <MenuItem onClick={handleClose}>\n                                    Settings\n                                </MenuItem>\n                                <MenuItem\n                                    onClick={() => {\n                                        window.localStorage.clear();\n                                        window.location.reload(false);\n                                    }}\n                                >\n                                    Clear Storage\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <Container>\n                    <Route exact path={myRoutes.clock} component={ClockPage} />\n                    <Route exact path={myRoutes.timer} component={TimerPage} />\n                    <Route\n                        exact\n                        path={myRoutes.stopwatch}\n                        component={StopwatchPage}\n                    />\n                </Container>\n                <BottomNavigation\n                    value={bottomNavIndex}\n                    onChange={(event, newValue) => setBottomNavIndex(newValue)}\n                    showLabels\n                    className={classes.stickToBottom}\n                >\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.clock}\n                        label={pageNames[0]}\n                        icon={<AccessTimeOutlinedIcon />}\n                    />\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.timer}\n                        label={pageNames[1]}\n                        icon={<AvTimerOutlinedIcon />}\n                    />\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.stopwatch}\n                        label={pageNames[2]}\n                        icon={<TimerOutlinedIcon />}\n                    />\n                </BottomNavigation>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {\n    createMuiTheme,\n    // makeStyles,\n    ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nconst feliOrange = \"#f9a825\";\nconst backgroundColor = \"#111111\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: { main: feliOrange },\n        secondary: {\n            main: backgroundColor,\n        },\n        background: {\n            default: backgroundColor,\n            paper: \"#1e1e1e\",\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}