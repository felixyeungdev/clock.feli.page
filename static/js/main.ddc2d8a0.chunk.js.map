{"version":3,"sources":["components/TimezoneDisplay.js","components/TimezoneSelect.js","hooks/useLocalStorage.js","components/ClockPage.js","components/TimerPage.js","components/LapDisplay.js","components/StopwatchPage.js","components/myRoutes.js","components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","marginVert","marginTop","marginBottom","TimezoneDisplay","timezone","classes","useState","ct","getTimezone","timezoneInfo","getCountry","country","countryInfo","utcOffset","Date","getTimezoneOffset","totalMin","Math","abs","hours","floor","minutes","result","push","join","prettyOffset","offsetString","time","setTime","updateClock","moment","tz","format","getSimpleTime","useEffect","interval","setInterval","clearInterval","Grid","container","spacing","className","item","xs","Typography","variant","name","style","textAlign","appBar","position","title","marginLeft","flex","paddingTop","Transition","React","forwardRef","props","ref","Slide","direction","TimezoneSelect","open","onClose","getAllTimezones","timezones","listItems","setListItems","inputEl","useRef","input","setInput","handleClose","payload","normalisedInput","toLowerCase","replaceAll","filteredTimezones","Object","values","filter","includes","map","ListItem","button","onClick","ListItemText","primary","secondary","Dialog","fullScreen","TransitionComponent","AppBar","color","Toolbar","IconButton","edge","aria-label","InputBase","inputRef","value","placeholder","autoFocus","paddingLeft","width","onChange","e","target","current","focus","Container","fontSize","List","slice","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","letterSpacing","fab","transform","bottom","left","zIndex","centerText","ClockPage","date","setDate","showTimezoneSelect","setShowTimezoneSelect","userTimezones","setUserTimezones","Divider","onDrop","removedIndex","addedIndex","items","arrayMove","dragBeginDelay","Fab","old","TimerPage","margin","centerDelta","display","alignItems","justifyContent","centerIndex","centerLap","LapDisplay","index","lap","deltaTime","calculateDisplayTime","paused","timed","delta","lapTime","deltaTextTime","generateTextTime","lapTextTime","maxWidth","controls","paddingBottom","background","spacer","minHeight","defaultStopwatchState","bypass","seconds","milliseconds","_hours","_minutes","_seconds","_milliseconds","state","lastStarted","now","parseInt","calculateLapData","laps","i","arr","reverse","generateLapItems","lapData","length","StopwatchPage","setState","displayTime","setDisplayTime","total","textTime","isZero","setIsZero","progress","setProgress","setLapData","lapItems","setLapItems","LinearProgress","align","justify","Button","newState","_lapData","lapMessage","forEach","lapItem","message","url","encodeURIComponent","window","myRoutes","clock","timer","stopwatch","root","flexGrow","menuButton","marginRight","appbar","stickToBottom","getTabIndexByHash","indexOf","location","hash","App","anchorEl","setAnchorEl","bottomNavIndex","setBottomNavIndex","pageNames","Boolean","hashChange","addEventListener","removeEventListener","basename","elevation","aria-controls","aria-haspopup","event","currentTarget","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","clear","reload","exact","path","component","BottomNavigation","newValue","showLabels","BottomNavigationAction","Link","to","label","icon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","backgroundColor","createMuiTheme","palette","type","main","default","paper","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","console","log"],"mappings":"wcAQMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,WAAY,CACRC,UAAW,OACXC,aAAc,YAsEPC,MA3Cf,YAAwC,IAAbC,EAAY,EAAZA,SACjBC,EAAUR,IADmB,EAEKS,oBAAS,WAC7C,OAAOC,IAAGC,YAAYJ,MAHS,mBAE5BK,EAF4B,aAKGH,oBAAS,WAC3C,OAAOC,IAAGG,WAAWD,EAAaE,aANH,mBAK5BC,EAL4B,aAQKN,oBAAS,WAC7C,OA1BR,SAAsBO,GAClBA,IAAa,IAAIC,MAAOC,oBACxB,IAAMC,EAAWC,KAAKC,IAAIL,GACtBM,EAAQF,KAAKG,MAAMJ,EAAW,IAC9BK,EAAUL,EAAW,GACrBM,EAAS,GAOb,OANIH,EAAQ,GACRG,EAAOC,KAAP,UAAeJ,EAAf,QAEAE,EAAU,GACVC,EAAOC,KAAP,UAAeJ,EAAf,SAEc,IAAdN,EAAwB,MACxBA,EAAY,EAAS,cAAN,OAAqBS,EAAOE,KAAK,KAAjC,WACfX,EAAY,EAAS,aAAN,OAAoBS,EAAOE,KAAK,KAAhC,gBAAnB,EAYWC,CAAahB,EAAaI,eATF,mBAQ5Ba,EAR4B,aAWXpB,mBAAS,KAXE,mBAW5BqB,EAX4B,KAWtBC,EAXsB,KAanC,SAASC,IACLD,EArCR,SAAuBxB,GACnB,OAAOA,EACD0B,MAASC,GAAG3B,GAAU4B,OAAO,SAC7BF,MAASE,OAAO,SAkCVC,CAAc7B,IAQ1B,OALA8B,qBAAU,WACN,IAAIC,EAAWC,YAAYP,EAAa,IACxC,OAAO,kBAAMQ,cAAcF,MAC5B,IAGC,eAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAWpC,EAAQL,WAA/C,UACI,cAACsC,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,eAACL,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BjC,EAAYkC,SAE1C,cAACR,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,UAApB,SACKnB,WAKjB,cAACY,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGI,MAAO,CAAEC,UAAW,OAAtC,SACI,cAACJ,EAAA,EAAD,CAAYC,QAAQ,KAApB,SAA0BlB,U,oHCrDpC9B,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCkD,OAAQ,CACJC,SAAU,YAEdC,MAAO,CACHC,WAAYrD,EAAMyC,QAAQ,GAC1Ba,KAAM,GAEVC,WAAY,CACRA,WAAY,YAIpB,SAASrB,GAAc7B,GACnB,OAAOA,EACD0B,MAASC,GAAG3B,GAAU4B,OAAO,SAC7BF,MAASE,OAAO,SAG1B,IAAMuB,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,cAACC,EAAA,EAAD,aAAOC,UAAU,OAAOF,IAAKA,GAASD,OAGlC,SAASI,GAAT,GAA4C,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QACrC3D,EAAUR,KADsC,EAGpBS,oBAAS,kBAAMC,IAAG0D,qBAHE,mBAG/CC,EAH+C,aAIpB5D,oBAAS,iBAAM,OAJK,mBAI/C6D,EAJ+C,KAIpCC,EAJoC,KAKhDC,EAAUC,iBAAO,MAL+B,EAO5BhE,oBAAS,iBAAM,MAPa,mBAO/CiE,EAP+C,KAOxCC,EAPwC,KAStD,SAASC,EAAYC,GACjBF,EAAS,IACTR,EAAQU,GAgDZ,OA7CAxC,qBAAU,WACN,GAAc,KAAVqC,EAAJ,CAIA,IAAMI,EAAkBJ,EACnBK,cACAC,WAAW,IAAK,IAChBA,WAAW,IAAK,IACfC,EAAoBC,OAAOC,OAAOd,GAAWe,QAC/C,SAAC7E,GACG,OAAOA,EAAS0C,KACX8B,cACAC,WAAW,IAAK,IAChBA,WAAW,IAAK,IAChBK,SAASP,MAGtB,OAAOP,EACHU,EAAkBK,KAAI,SAAC/E,GACnB,OACI,cAACgF,EAAA,EAAD,CACIC,QAAM,EAENC,QAAS,kBAAMb,EAAYrE,EAAS0C,OAHxC,SAKI,cAACyC,EAAA,EAAD,CACIC,QAASpF,EAAS0C,KACb+B,WAAW,IAAK,OAChBA,WAAW,IAAK,KACrBY,UAAWxD,GAAc7B,EAAS0C,SAPjC1C,EAAS0C,UArB1BsB,EAAa,MAkClB,CAACG,IAUA,eAACmB,EAAA,EAAD,CACIC,YAAU,EACV5B,KAAMA,EACNC,QAAS,kBAAMS,KACfmB,oBAAqBrC,GAJzB,UAMI,cAACsC,EAAA,EAAD,CAAQpD,UAAWpC,EAAQ4C,OAAQ6C,MAAM,YAAzC,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CACIC,KAAK,QACLH,MAAM,UACNR,QAAS,kBAAMb,KACfyB,aAAW,QAJf,SAMI,cAAC,IAAD,MAEJ,cAACC,EAAA,EAAD,CACIC,SAAU/B,EACVgC,MAAO9B,EACP+B,YAAY,YACZC,WAAS,EACTxD,MAAO,CACHyD,YAAa,OACbC,MAAO,QAEXC,SAAU,SAACC,GACPnC,EAASmC,EAAEC,OAAOP,UAG1B,cAACL,EAAA,EAAD,CACIC,KAAK,QACLH,MAAM,UACNR,QAAS,iBAAkC,IAATf,GAtC9CC,EAAS,SAEbH,EAAQwC,QAAQC,SAqCAZ,aAAqB,IAAT3B,EAAc,SAAW,QAJzC,SAMc,IAATA,EAAc,cAAC,KAAD,IAAiB,cAAC,IAAD,WAIlC,IAATA,GACG,cAACwC,EAAA,EAAD,CAAWtE,UAAWpC,EAAQiD,WAA9B,SACI,eAAChB,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAMS,MAAO,CAAEC,UAAW,UAAYL,GAAI,GAA1C,SACI,cAAC,KAAD,CACIqE,SAAS,QACTjE,MAAO,CAAEiE,SAAU,aAG3B,cAAC1E,EAAA,EAAD,CAAMS,MAAO,CAAEC,UAAW,UAAYL,GAAI,GAA1C,SACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,wCAOhB,cAACkE,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,UAAO9C,EAAU+C,MAAM,EAAG,WC9J3B,SAASC,GAAgBC,EAAKC,GACzC,IAAMC,EAHK,mBAGkBF,EAD0B,EAE7B9G,oBAAS,WAC/B,IAAMiH,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GACb,oBAAjBF,EAAoCA,IACxCA,KAN4C,mBAEhDhB,EAFgD,KAEzCuB,EAFyC,KAavD,OAJA1F,qBAAU,WACNsF,aAAaK,QAAQP,EAAaI,KAAKI,UAAUzB,MAClD,CAACiB,EAAajB,IAEV,CAACA,EAAOuB,G,iCCFb/H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4B,KAAM,CACFoG,cAAe,MACf/E,UAAW,SACXgE,SAAU,UAEdgB,IAAK,CACD9E,SAAU,QACV+E,UAAW,mBACXC,OAAQ,OACRC,KAAM,MACNC,OAAQ,MAEZC,WAAY,CACRrF,UAAW,cAgGJsF,OArFf,WACI,IAAMjI,EAAUR,KADC,EAEOS,mBAAS,IAFhB,mBAEVqB,EAFU,KAEJC,EAFI,OAGOtB,mBAAS,IAHhB,mBAGViI,EAHU,KAGJC,EAHI,OAImClI,oBAAS,GAJ5C,mBAIVmI,EAJU,KAIUC,EAJV,OAKyBvB,GAAgB,YAAa,IALtD,mBAKVwB,EALU,KAKKC,EALL,KAMjB,SAAS/G,IACLD,EAbGE,MAASE,OAAO,aAcnBwG,EAXG1G,MAASE,OAAO,gBAqCvB,OALAE,qBAAU,WACN,IAAIC,EAAWC,YAAYP,EAAa,IACxC,OAAO,kBAAMQ,cAAcF,MAC5B,IAGC,eAAC4E,EAAA,EAAD,CACIhE,MAAO,CACH9C,UAAW,QAFnB,UAKI,eAAC8G,EAAA,EAAD,WACI,cAACnE,EAAA,EAAD,CACIC,QAAQ,KACRiD,MAAM,UACNrD,UAAWpC,EAAQsB,KAHvB,SAKKA,IAEL,cAACiB,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWpC,EAAQgI,WAA5C,SACKE,IAEL,cAACM,EAAA,EAAD,CAAS9F,MAAO,CAAE9C,UAAW,aAEjC,cAAC8G,EAAA,EAAD,UACI,cAAC,aAAD,CAAoB+B,OA7BhC,YAA+C,IAA7BC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAC5BJ,GAAiB,SAACK,GAAD,OAAWC,KAAUD,EAAOF,EAAcC,OA4BfG,eAAgB,IAApD,SACKR,EAAcxD,KAAI,SAAC/E,GAChB,OACI,cAAC,aAAD,UACI,cAAC,EAAD,CAAiBA,SAAUA,KADfA,UAYhC,cAACgJ,EAAA,EAAD,CACItD,MAAM,UACNI,aAAW,MACXzD,UAAWpC,EAAQ2H,IACnB1C,QA9DZ,WACIoD,GAAsB,IAyDlB,SAMI,cAAC,IAAD,MAEJ,cAAC5E,GAAD,CACIC,KAAM0E,EACNzE,QAjEZ,SAA2B5D,GACvBsI,GAAsB,GACtBtI,GACIwI,GAAiB,SAACS,GACd,OAAKA,EAAInE,SAAS9E,GAGXiJ,EAFG,GAAN,mBAAWA,GAAX,CAAgBjJ,cC3CrBkJ,GAZG,WACd,OACI,cAACvC,EAAA,EAAD,CACIhE,MAAO,CACHwG,OAAQ,QAFhB,SAKI,cAAC3G,EAAA,EAAD,CAAYC,QAAQ,KAApB,4B,oBCENhD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCyJ,YAAa,CACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBC,YAAa,CACTH,QAAS,OACTC,WAAY,SACZC,eAAgB,YAEpBE,UAAW,CACPJ,QAAS,OACTC,WAAY,SACZC,eAAgB,cAEpBJ,OAAQ,CACJtJ,UAAW,MACXC,aAAc,WAqCP4J,OAjCf,YAAqC,IAAfC,EAAc,EAAdA,MAAOC,EAAO,EAAPA,IACnB3J,EAAUR,KAEVoK,EAAYC,GAAqB,CAAEC,QAAQ,EAAMC,MAAOJ,EAAIK,QAC5DC,EAAUJ,GAAqB,CAAEC,QAAQ,EAAMC,MAAOJ,EAAIA,MAC1DO,EAAgBC,GAAiBP,GACjCQ,EAAcD,GAAiBF,GAErC,OACI,cAACvD,EAAA,EAAD,CACItE,UAAWpC,EAAQkJ,OACnBxG,MAAO,CAAEC,UAAW,SAAU0H,SAAU,SAF5C,SAII,eAACpI,EAAA,EAAD,CAAMC,WAAS,EAACQ,MAAO,CAAEC,UAAW,UAApC,UACI,cAACV,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGF,UAAWpC,EAAQuJ,YAArC,SACI,eAAChH,EAAA,EAAD,CAAYC,QAAQ,YAApB,cAAkCkH,OAEtC,cAACzH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGF,UAAWpC,EAAQmJ,YAArC,SACI,cAAC5G,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B0H,MAEjC,cAACjI,EAAA,EAAD,CACII,MAAI,EACJC,GAAI,EACJF,UAAWpC,EAAQwJ,UACnB9G,MAAO,CAAEC,UAAW,SAJxB,SAMI,cAACJ,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B4H,Y,wCC/C3C5K,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC4K,SAAU,CACNzH,SAAU,QACV+E,UAAW,mBACXC,OAAQ,OACRC,KAAM,MACNC,OAAQ,KACR9E,WAAY,OACZsH,cAAe,OACfC,WACI,sEAERxH,KAAM,CACFoG,QAAS,QAEb9H,KAAM,CACFoG,cAAe,MACf/E,UAAW,SACXgE,SAAU,UAEd8D,OAAQ,CACJC,UAAW,aAIbC,GAAwB,CAC1BZ,MAAO,EACPD,QAAQ,GAGL,SAASK,GAAT,EAEHS,GACD,IAAD,mBAFG9J,EAEH,KAFUE,EAEV,KAFmB6J,EAEnB,KAF4BC,EAE5B,KACQC,EAAM,UAAMjK,EAAQ,GAAK,IAAM,IAAzB,OAA8BA,GACpCkK,EAAQ,UAAMhK,EAAU,GAAK,IAAM,IAA3B,OAAgCA,GACxCiK,EAAQ,UAAMJ,EAAU,GAAK,IAAM,IAA3B,OAAgCA,GACxCK,EAAa,UAAMJ,EAAe,GAAK,IAAM,IAAhC,OAAqCA,GACpD7J,EAAM,UAAM8J,EAAN,YAAgBC,EAAhB,YAA4BC,EAA5B,YAAwCC,GAClD,OAAIN,IACA9J,EAAQE,IAAY,EACpBC,EAASA,EAAO4F,MAAM,GACL,IAAV/F,EACPG,EAASA,EAAO4F,MAAM,GACf/F,EAAQ,IACfG,EAASA,EAAO4F,MAAM,EAAG,KANV5F,EAWhB,IAAM4I,GAAuB,SAACsB,GACjC,IAAMpB,EACFoB,EAAMrB,SAAWqB,EAAMC,YACjBD,EAAMpB,MACNtJ,KAAK4K,MAAQF,EAAMC,YAAcD,EAAMpB,MAC7Ce,EAAeQ,SAAUvB,EAAQ,IAAQ,IACzCc,EAAUjK,KAAKG,MAAOgJ,EAAQ,IAAQ,IACtC/I,EAAUJ,KAAKG,MAAOgJ,EAAK,IAAkB,IAGjD,MAAO,CAFKnJ,KAAKG,MAAOgJ,EAAK,KAAuB,IAErC/I,EAAS6J,EAASC,EAAcf,IAGnD,SAASwB,KAA6B,IAAZC,EAAW,uDAAJ,GAC7B,OAAOA,EACF1G,KAAI,SAAC6E,EAAK8B,EAAGC,GACV,MAAO,CACH/B,IAAKA,EACLK,MAAOyB,EAAI,GAAK,EAAI9B,EAAM+B,EAAID,EAAI,GAAK9B,MAG9CgC,UAGT,SAASC,GAAiBC,GACtB,OAAOA,EAAQ/G,KAAI,SAAC6E,EAAK8B,EAAGC,GACxB,OAAO,cAAC,GAAD,CAAYhC,MAAOgC,EAAII,OAASL,EAAG9B,IAAKA,GAAU8B,MAIjE,IA4KeM,GA5KO,WAClB,IAAM/L,EAAUR,KADQ,EAGEsH,GACtB,mBACA,kBAAM6D,MALc,mBAGjBQ,EAHiB,KAGVa,EAHU,KAOhBlC,EAAWqB,EAAXrB,OAPgB,EAQc7J,oBAAS,WAC3C,OAAO4J,GAAqBsB,MATR,mBAQjBc,EARiB,KAQJC,EARI,mBAY+BD,EAZ/B,GAYDpB,GAZC,gBAYsBsB,GAZtB,WAclBC,EAAWjC,GAAiB8B,GAdV,EAeEhM,oBAAS,kBAAgB,IAAVkM,KAfjB,mBAenBE,EAfmB,KAeXC,EAfW,OAgBQrM,oBAAS,WACrC,OAAOW,KAAKG,MAAO8J,EAAU,GAAM,QAjBf,mBAgBjB0B,EAhBiB,KAgBPC,EAhBO,OAmBMvM,oBAAS,kBAAMsL,GAAiBJ,EAAMK,SAnB5C,mBAmBjBK,EAnBiB,KAmBRY,EAnBQ,OAoBQxM,oBAAS,kBAAM2L,GAAiBC,MApBxC,mBAoBjBa,EApBiB,KAoBPC,EApBO,KAwGxB,OAlFA9K,qBAAU,WACN,IAAIC,EAQJ,OAPKgI,EAKDoC,EAAerC,GAAqBsB,IAJpCrJ,EAAWC,aAAY,WACnBmK,EAAerC,GAAqBsB,MACrC,IAIA,WACHrJ,GAAYE,cAAcF,MAE/B,CAACgI,IAEJjI,qBAAU,WACN,IAAM0K,EAAW3L,KAAKG,MAAO8J,EAAU,GAAM,KAC7C2B,EAAYD,KACb,CAAC1B,IAEJhJ,qBAAU,WACN8K,EAAYf,GAAiBC,MAC9B,CAACA,IA8DA,eAACnF,EAAA,EAAD,CACIhE,MAAO,CACH9C,UAAW,QAFnB,UAKI,eAAC8G,EAAA,EAAD,CAAWhE,MAAO,CAAEC,UAAW,UAA/B,UACI,cAACJ,EAAA,EAAD,CACIC,QAAQ,KACRJ,UAAWpC,EAAQsB,KACnBmE,MAAM,UAHV,SAKK2G,IAEL,cAACQ,GAAA,EAAD,CACI5G,MAAOuG,EACP/J,QAAQ,cACRE,MAAO,CACHwG,OAAQ,OACRmB,SAAU,WAIlB,cAAC7B,EAAA,EAAD,CAAS9F,MAAO,CAAE9C,UAAW,aAEjC,cAAC8G,EAAA,EAAD,UAAYgG,IACZ,cAAChG,EAAA,EAAD,CAAWtE,UAAWpC,EAAQyK,SAC9B,cAAC/D,EAAA,EAAD,CAAWtE,UAAWpC,EAAQsK,SAA9B,SACI,eAACrI,EAAA,EAAD,CAAMC,WAAS,EAAC2K,MAAM,SAASC,QAAQ,SAAvC,UACI,cAAC7K,EAAA,EAAD,CACII,MAAI,EACJC,GAAI,EACJF,UAAWpC,EAAQgD,KACnBN,MAAO,CACH4G,eAAgB,YALxB,UAQM+C,GACE,cAACU,GAAA,EAAD,CAAQ9H,QA5EhC,WACI+G,EAASrB,IACT2B,GAAU,GACVJ,EAAerC,GAAqBc,KACpC8B,EAAW,KAwES,qBAGR,cAACxK,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SACI,cAACyG,EAAA,EAAD,CACItD,MAAM,UACNI,aAAW,MACXZ,QAxGxB,WACI+G,GAAS,SAACb,GACN,IAAMrB,GAAUqB,EAAMrB,OAChBkD,EAAW,CACblD,UAEEuB,EAAM5K,KAAK4K,MAWjB,OAVIvB,GACyB,MAArBqB,EAAMC,cACN4B,EAASjD,MAAQsB,EAAMF,EAAMC,YAAcD,EAAMpB,OACrDiD,EAAS5B,YAAc,OAEvBkB,GAAU,GACVU,EAAS5B,YAAcC,EACnBF,EAAMpB,OAGP,2BAAKoB,GAAU6B,OAoFV,SAKKlD,EACG,cAAC,KAAD,IAEA,cAAC,KAAD,QAIZ,cAAC7H,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,EAAGF,UAAWpC,EAAQgD,KAArC,UACMqJ,IACGvC,EACG,cAACiD,GAAA,EAAD,CAAQ9H,QAxFpC,WACI,IAAMmH,EAAWjC,GAAiB8B,GAAa,GACzCgB,EAAW,YAAIpB,GAASF,UAC1BuB,EAAa,GACbD,EAASnB,OAAS,IAClBoB,EAAa,iBACbD,EAASE,SAAQ,SAACC,EAAS3B,GACvB,IAIMvB,EAAgBC,GAJJN,GAAqB,CACnCC,QAAQ,EACRC,MAAOqD,EAAQpD,SAGnBkD,GAAU,YAASzB,EAAI,EAAb,aAAmBvB,OAIrC,IAAMmD,EAAO,qBAAiBjB,GAAjB,OAA4Bc,GACnCI,EAAG,8BAA0BC,mBAAmBF,IACtDG,OAAO9J,KAAK4J,EAAK,WAsEO,mBAEA,cAACP,GAAA,EAAD,CAAQ9H,QArEpC,WACI+G,GAAS,SAACb,GACN,IAAM6B,EAAW,GAIjB,OAHAA,EAASxB,KAAOL,EAAMK,MAAQ,GAC9BwB,EAASxB,KAAKtK,KAAKiL,GACnBM,EAAWlB,GAAiByB,EAASxB,OAC9B,2BAAKL,GAAU6B,OA+DF,6BC3PjBS,GANE,CACbC,MAAO,IACPC,MAAO,SACPC,UAAW,cC2BTpO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCmO,KAAM,CACFC,SAAU,GAEdC,WAAY,CACRC,YAAatO,EAAMyC,QAAQ,IAE/BW,MAAO,CACHgL,SAAU,GAEdG,OAAQ,GAGRC,cAAe,CACX9H,MAAO,OACPvD,SAAU,QACVgF,OAAQ,OAIhB,SAASsG,KACL,OAAOzJ,OAAOC,OAAO8I,IAAUW,QAAQZ,OAAOa,SAASC,KAAKzH,MAAM,IA+HvD0H,OA5Hf,WACI,IAAMvO,EAAUR,KADL,EAEqB2D,IAAMlD,SAAS,MAFpC,mBAEJuO,EAFI,KAEMC,EAFN,OAGiCtL,IAAMlD,UAAS,WACvD,OAAOkO,QAJA,mBAGJO,EAHI,KAGYC,EAHZ,KAMLC,EAAY,CAAC,QAAS,QAAS,aAE/BlL,EAAOmL,QAAQL,GAMfpK,EAAc,WAChBqK,EAAY,OAGhB,SAASK,IACLH,EAAkBR,MAUtB,OAPAtM,qBAAU,WAEN,OADA2L,OAAOuB,iBAAiB,aAAcD,GAC/B,WACHtB,OAAOwB,oBAAoB,aAAcF,MAE9C,IAGC,cAAC,IAAD,CAAYG,SAAUxB,GAASC,MAA/B,SACI,sBAAKtL,UAAWpC,EAAQ6N,KAAxB,UACI,cAACrI,EAAA,EAAD,CACIC,MAAM,YACNyJ,UAAU,IACVrM,SAAS,SACTT,UAAWpC,EAAQiO,OAJvB,SAMI,eAACvI,EAAA,EAAD,WACI,cAACnD,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWpC,EAAQ8C,MAA5C,SACK8L,EAAUF,KAEf,gCACI,cAAC/I,EAAA,EAAD,CACIE,aAAW,0BACXsJ,gBAAc,cACdC,gBAAc,OACdnK,QArCT,SAACoK,GAChBZ,EAAYY,EAAMC,gBAqCM7J,MAAM,UALV,SAOI,cAAC,IAAD,MAEJ,eAAC8J,EAAA,EAAD,CACIC,GAAG,cACHhB,SAAUA,EACViB,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,aAAW,EACXC,gBAAiB,CACbH,SAAU,MACVC,WAAY,SAEhBjM,KAAMA,EACNC,QAASS,EAbb,UAeI,cAAC0L,EAAA,EAAD,CAAU7K,QAASb,EAAnB,yBAGA,cAAC0L,EAAA,EAAD,CAAU7K,QAASb,EAAnB,sBAGA,cAAC0L,EAAA,EAAD,CACI7K,QAAS,WACLuI,OAAOrG,aAAa4I,QACpBvC,OAAOa,SAAS2B,QAAO,IAH/B,sCAYhB,eAACtJ,EAAA,EAAD,WACI,cAAC,IAAD,CAAOuJ,OAAK,EAACC,KAAMzC,GAASC,MAAOyC,UAAWlI,KAC9C,cAAC,IAAD,CAAOgI,OAAK,EAACC,KAAMzC,GAASE,MAAOwC,UAAWlH,KAC9C,cAAC,IAAD,CACIgH,OAAK,EACLC,KAAMzC,GAASG,UACfuC,UAAWpE,QAGnB,eAACqE,EAAA,EAAD,CACIpK,MAAO0I,EACPrI,SAAU,SAACgJ,EAAOgB,GAAR,OAAqB1B,EAAkB0B,IACjDC,YAAU,EACVlO,UAAWpC,EAAQkO,cAJvB,UAMI,cAACqC,EAAA,EAAD,CACIJ,UAAWK,IACXC,GAAIhD,GAASC,MACbgD,MAAO9B,EAAU,GACjB+B,KAAM,cAAC,IAAD,MAEV,cAACJ,EAAA,EAAD,CACIJ,UAAWK,IACXC,GAAIhD,GAASE,MACb+C,MAAO9B,EAAU,GACjB+B,KAAM,cAAC,IAAD,MAEV,cAACJ,EAAA,EAAD,CACIJ,UAAWK,IACXC,GAAIhD,GAASG,UACb8C,MAAO9B,EAAU,GACjB+B,KAAM,cAAC,IAAD,eC9JfC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCMRQ,GAAkB,UAElB3R,GAAQ4R,aAAe,CACzBC,QAAS,CACLC,KAAM,OACNrM,QAAS,CAAEsM,KANA,WAOXrM,UAAW,CACPqM,KAAMJ,IAEV7G,WAAY,CACRkH,QAASL,GACTM,MAAO,cAKnBC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAACC,GAAA,EAAD,CAAerS,MAAOA,GAAtB,UACI,cAACsS,GAAA,EAAD,IACA,cAAC,GAAD,SAGRC,SAASC,eAAe,SAM5BtB,GAAgBuB,QAAQC,O","file":"static/js/main.ddc2d8a0.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\n// import Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment-timezone\";\nimport ct from \"countries-and-timezones\";\n\nconst useStyles = makeStyles((theme) => ({\n    marginVert: {\n        marginTop: \"16px\",\n        marginBottom: \"16px\",\n    },\n}));\n\nfunction getSimpleTime(timezone) {\n    return timezone\n        ? moment().tz(timezone).format(\"HH:mm\")\n        : moment().format(\"HH:mm\");\n}\n\nfunction prettyOffset(utcOffset) {\n    utcOffset += new Date().getTimezoneOffset();\n    const totalMin = Math.abs(utcOffset);\n    var hours = Math.floor(totalMin / 60);\n    var minutes = totalMin % 60;\n    var result = [];\n    if (hours > 0) {\n        result.push(`${hours} hr`);\n    }\n    if (minutes > 0) {\n        result.push(`${hours} min`);\n    }\n    if (utcOffset === 0) return \"Now\";\n    if (utcOffset < 0) return `Yesterday, ${result.join(\" \")} behind`;\n    if (utcOffset > 0) return `Tomorrow, ${result.join(\" \")} behind`;\n}\n\nfunction TimezoneDisplay({ timezone }) {\n    const classes = useStyles();\n    const [timezoneInfo, setTimezoneInfo] = useState(() => {\n        return ct.getTimezone(timezone);\n    });\n    const [countryInfo, setCountryInfo] = useState(() => {\n        return ct.getCountry(timezoneInfo.country);\n    });\n    const [offsetString, setOffsetString] = useState(() => {\n        return prettyOffset(timezoneInfo.utcOffset);\n    });\n    const [time, setTime] = useState(\"\");\n\n    function updateClock() {\n        setTime(getSimpleTime(timezone));\n    }\n\n    useEffect(() => {\n        var interval = setInterval(updateClock, 10);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <Grid container spacing={1} className={classes.marginVert}>\n            <Grid item xs={6}>\n                <Grid container>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h6\">{countryInfo.name}</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                        <Typography variant=\"caption\">\n                            {offsetString}\n                        </Typography>\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Grid item xs={6} style={{ textAlign: \"end\" }}>\n                <Typography variant=\"h3\">{time}</Typography>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default TimezoneDisplay;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Typography from \"@material-ui/core/Typography\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Slide from \"@material-ui/core/Slide\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ct from \"countries-and-timezones\";\nimport moment from \"moment\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: \"relative\",\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    paddingTop: {\n        paddingTop: \"28px\",\n    },\n}));\n\nfunction getSimpleTime(timezone) {\n    return timezone\n        ? moment().tz(timezone).format(\"HH:mm\")\n        : moment().format(\"HH:mm\");\n}\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"left\" ref={ref} {...props} />;\n});\n\nexport default function TimezoneSelect({ open, onClose }) {\n    const classes = useStyles();\n\n    const [timezones, setTimezones] = useState(() => ct.getAllTimezones());\n    const [listItems, setListItems] = useState(() => []);\n    const inputEl = useRef(null);\n\n    const [input, setInput] = useState(() => \"\");\n\n    function handleClose(payload) {\n        setInput(\"\");\n        onClose(payload);\n    }\n\n    useEffect(() => {\n        if (input === \"\") {\n            setListItems([]);\n            return;\n        }\n        const normalisedInput = input\n            .toLowerCase()\n            .replaceAll(\"/\", \"\")\n            .replaceAll(\" \", \"\");\n        const filteredTimezones = Object.values(timezones).filter(\n            (timezone) => {\n                return timezone.name\n                    .toLowerCase()\n                    .replaceAll(\"/\", \"\")\n                    .replaceAll(\"_\", \"\")\n                    .includes(normalisedInput);\n            }\n        );\n        return setListItems(\n            filteredTimezones.map((timezone) => {\n                return (\n                    <ListItem\n                        button\n                        key={timezone.name}\n                        onClick={() => handleClose(timezone.name)}\n                    >\n                        <ListItemText\n                            primary={timezone.name\n                                .replaceAll(\"/\", \" - \")\n                                .replaceAll(\"_\", \" \")}\n                            secondary={getSimpleTime(timezone.name)}\n                        />\n                    </ListItem>\n                );\n            })\n        );\n    }, [input]);\n\n    function handleFocusOrClear(shouldFocus) {\n        if (!shouldFocus) {\n            setInput(\"\");\n        }\n        inputEl.current.focus();\n    }\n\n    return (\n        <Dialog\n            fullScreen\n            open={open}\n            onClose={() => handleClose()}\n            TransitionComponent={Transition}\n        >\n            <AppBar className={classes.appBar} color=\"secondary\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => handleClose()}\n                        aria-label=\"close\"\n                    >\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <InputBase\n                        inputRef={inputEl}\n                        value={input}\n                        placeholder=\"Search...\"\n                        autoFocus\n                        style={{\n                            paddingLeft: \"16px\",\n                            width: \"100%\",\n                        }}\n                        onChange={(e) => {\n                            setInput(e.target.value);\n                        }}\n                    />\n                    <IconButton\n                        edge=\"start\"\n                        color=\"inherit\"\n                        onClick={() => handleFocusOrClear(input == \"\")}\n                        aria-label={input == \"\" ? \"search\" : \"clear\"}\n                    >\n                        {input == \"\" ? <SearchIcon /> : <CloseIcon />}\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            {input == \"\" && (\n                <Container className={classes.paddingTop}>\n                    <Grid container>\n                        <Grid style={{ textAlign: \"center\" }} xs={12}>\n                            <SearchIcon\n                                fontSize=\"large\"\n                                style={{ fontSize: \"128px\" }}\n                            />\n                        </Grid>\n                        <Grid style={{ textAlign: \"center\" }} xs={12}>\n                            <Typography variant=\"subtitle\">\n                                Search for a region\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </Container>\n            )}\n            <Container>\n                <List>{listItems.slice(0, 15)}</List>\n            </Container>\n        </Dialog>\n    );\n}\n","import { useEffect, useState } from \"react\";\n\nconst PREFIX = \"clock_feli_page-\";\n\nexport default function useLocalStorage(key, initialValue) {\n    const prefixedKey = PREFIX + key;\n    const [value, setValue] = useState(() => {\n        const jsonValue = localStorage.getItem(prefixedKey);\n        if (jsonValue != null) return JSON.parse(jsonValue);\n        if (typeof initialValue === \"function\") return initialValue();\n        return initialValue;\n    });\n\n    useEffect(() => {\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\n    }, [prefixedKey, value]);\n\n    return [value, setValue];\n}\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Fab from \"@material-ui/core/Fab\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\n\nimport moment from \"moment\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TimezoneDisplay from \"./TimezoneDisplay\";\nimport TimezoneSelect from \"./TimezoneSelect\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\nimport { Container as DraggableContainer, Draggable } from \"react-smooth-dnd\";\nimport arrayMove from \"array-move\";\n\nconst useStyles = makeStyles((theme) => ({\n    time: {\n        letterSpacing: \"5px\",\n        textAlign: \"center\",\n        fontSize: \"3.5rem\",\n    },\n    fab: {\n        position: \"fixed\",\n        transform: \"TranslateX(-50%)\",\n        bottom: \"72px\",\n        left: \"50%\",\n        zIndex: \"50\",\n    },\n    centerText: {\n        textAlign: \"center\",\n    },\n}));\n\nfunction getSimpleTime() {\n    return moment().format(\"HH:mm:ss\");\n}\nfunction getSimpleDate() {\n    return moment().format(\"ddd, DD MMM\");\n}\n\nfunction ClockPage() {\n    const classes = useStyles();\n    const [time, setTime] = useState(\"\");\n    const [date, setDate] = useState(\"\");\n    const [showTimezoneSelect, setShowTimezoneSelect] = useState(false);\n    const [userTimezones, setUserTimezones] = useLocalStorage(\"timezones\", []);\n    function updateClock() {\n        setTime(getSimpleTime());\n        setDate(getSimpleDate());\n    }\n\n    function handleAddTimezoneIntent() {\n        setShowTimezoneSelect(true);\n    }\n    function handleAddTimezone(timezone) {\n        setShowTimezoneSelect(false);\n        timezone &&\n            setUserTimezones((old) => {\n                if (!old.includes(timezone)) {\n                    return [...old, timezone];\n                }\n                return old;\n            });\n    }\n\n    function onDrop({ removedIndex, addedIndex }) {\n        setUserTimezones((items) => arrayMove(items, removedIndex, addedIndex));\n    }\n\n    useEffect(() => {\n        var interval = setInterval(updateClock, 10);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <Container\n            style={{\n                marginTop: \"16px\",\n            }}\n        >\n            <Container>\n                <Typography\n                    variant=\"h3\"\n                    color=\"primary\"\n                    className={classes.time}\n                >\n                    {time}\n                </Typography>\n                <Typography variant=\"h5\" className={classes.centerText}>\n                    {date}\n                </Typography>\n                <Divider style={{ marginTop: \"16px\" }} />\n            </Container>\n            <Container>\n                <DraggableContainer onDrop={onDrop} dragBeginDelay={200}>\n                    {userTimezones.map((timezone) => {\n                        return (\n                            <Draggable key={timezone}>\n                                <TimezoneDisplay timezone={timezone} />\n                            </Draggable>\n                        );\n                    })}\n\n                    {/* <TimezoneDisplay timezone=\"Asia/Hong_Kong\" />\n                <TimezoneDisplay timezone=\"Europe/London\" />\n                <TimezoneDisplay timezone=\"Asia/Tokyo\" />\n                <TimezoneDisplay timezone=\"Asia/Yangon\" /> */}\n                </DraggableContainer>\n            </Container>\n            <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                className={classes.fab}\n                onClick={handleAddTimezoneIntent}\n            >\n                <LanguageIcon />\n            </Fab>\n            <TimezoneSelect\n                open={showTimezoneSelect}\n                onClose={handleAddTimezone}\n            />\n        </Container>\n    );\n}\n\nexport default ClockPage;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\nconst TimerPage = () => {\n    return (\n        <Container\n            style={{\n                margin: \"16px\",\n            }}\n        >\n            <Typography variant=\"h3\">Coming Soon</Typography>\n        </Container>\n    );\n};\n\nexport default TimerPage;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport PlayArrowOutlinedIcon from \"@material-ui/icons/PlayArrowOutlined\";\nimport PauseOutlinedIcon from \"@material-ui/icons/PauseOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { generateTextTime, calculateDisplayTime } from \"./StopwatchPage\";\n\nconst useStyles = makeStyles((theme) => ({\n    centerDelta: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    centerIndex: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-end\",\n    },\n    centerLap: {\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"flex-start\",\n    },\n    margin: {\n        marginTop: \"8px\",\n        marginBottom: \"8px\",\n    },\n}));\n\nfunction LapDisplay({ index, lap }) {\n    const classes = useStyles();\n\n    const deltaTime = calculateDisplayTime({ paused: true, timed: lap.delta });\n    const lapTime = calculateDisplayTime({ paused: true, timed: lap.lap });\n    const deltaTextTime = generateTextTime(deltaTime);\n    const lapTextTime = generateTextTime(lapTime);\n\n    return (\n        <Container\n            className={classes.margin}\n            style={{ textAlign: \"center\", maxWidth: \"450px\" }}\n        >\n            <Grid container style={{ textAlign: \"center\" }}>\n                <Grid item xs={4} className={classes.centerIndex}>\n                    <Typography variant=\"subtitle2\">#{index}</Typography>\n                </Grid>\n                <Grid item xs={4} className={classes.centerDelta}>\n                    <Typography variant=\"body1\">{deltaTextTime}</Typography>\n                </Grid>\n                <Grid\n                    item\n                    xs={4}\n                    className={classes.centerLap}\n                    style={{ textAlign: \"start\" }}\n                >\n                    <Typography variant=\"body1\">{lapTextTime}</Typography>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default LapDisplay;\n","import React, { useState, useEffect } from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport LapDisplay from \"./LapDisplay\";\nimport PlayArrowOutlinedIcon from \"@material-ui/icons/PlayArrowOutlined\";\nimport PauseOutlinedIcon from \"@material-ui/icons/PauseOutlined\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst useStyles = makeStyles((theme) => ({\n    controls: {\n        position: \"fixed\",\n        transform: \"TranslateX(-50%)\",\n        bottom: \"56px\",\n        left: \"50%\",\n        zIndex: \"50\",\n        paddingTop: \"64px\",\n        paddingBottom: \"16px\",\n        background:\n            \"linear-gradient(0deg, rgba(17,17,17,1) 60%, rgba(17,17,17,0) 100%)\",\n    },\n    flex: {\n        display: \"flex\",\n    },\n    time: {\n        letterSpacing: \"5px\",\n        textAlign: \"center\",\n        fontSize: \"3.5rem\",\n    },\n    spacer: {\n        minHeight: \"180px\",\n    },\n}));\n\nconst defaultStopwatchState = {\n    timed: 0,\n    paused: true,\n};\n\nexport function generateTextTime(\n    [hours, minutes, seconds, milliseconds],\n    bypass\n) {\n    const _hours = `${hours < 10 ? \"0\" : \"\"}${hours}`;\n    const _minutes = `${minutes < 10 ? \"0\" : \"\"}${minutes}`;\n    const _seconds = `${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n    const _milliseconds = `${milliseconds < 10 ? \"0\" : \"\"}${milliseconds}`;\n    var result = `${_hours}:${_minutes}:${_seconds}.${_milliseconds}`;\n    if (bypass) return result;\n    if (hours + minutes === 0) {\n        result = result.slice(6);\n    } else if (hours === 0) {\n        result = result.slice(3);\n    } else if (hours > 1) {\n        result = result.slice(0, 8);\n    }\n    return result;\n}\n\nexport const calculateDisplayTime = (state) => {\n    const timed =\n        state.paused || !state.lastStarted\n            ? state.timed\n            : Date.now() - state.lastStarted + state.timed;\n    var milliseconds = parseInt((timed % 1000) / 10),\n        seconds = Math.floor((timed / 1000) % 60),\n        minutes = Math.floor((timed / (1000 * 60)) % 60),\n        hours = Math.floor((timed / (1000 * 60 * 60)) % 24);\n\n    return [hours, minutes, seconds, milliseconds, timed];\n};\n\nfunction calculateLapData(laps = []) {\n    return laps\n        .map((lap, i, arr) => {\n            return {\n                lap: lap,\n                delta: i - 1 >= 0 ? lap - arr[i - 1] : lap,\n            };\n        })\n        .reverse();\n}\n\nfunction generateLapItems(lapData) {\n    return lapData.map((lap, i, arr) => {\n        return <LapDisplay index={arr.length - i} lap={lap} key={i} />;\n    });\n}\n\nconst StopwatchPage = () => {\n    const classes = useStyles();\n\n    const [state, setState] = useLocalStorage(\n        \"stopwatch-state\",\n        () => defaultStopwatchState\n    );\n    const { paused } = state;\n    const [displayTime, setDisplayTime] = useState(() => {\n        return calculateDisplayTime(state);\n    });\n\n    const [hours, minutes, seconds, milliseconds, total] = displayTime;\n\n    const textTime = generateTextTime(displayTime);\n    var [isZero, setIsZero] = useState(() => total === 0);\n    const [progress, setProgress] = useState(() => {\n        return Math.floor((seconds / 60) * 100);\n    });\n    const [lapData, setLapData] = useState(() => calculateLapData(state.laps));\n    const [lapItems, setLapItems] = useState(() => generateLapItems(lapData));\n\n    useEffect(() => {\n        var interval;\n        if (!paused) {\n            interval = setInterval(() => {\n                setDisplayTime(calculateDisplayTime(state));\n            }, 10);\n        } else {\n            setDisplayTime(calculateDisplayTime(state));\n        }\n        return () => {\n            interval && clearInterval(interval);\n        };\n    }, [paused]);\n\n    useEffect(() => {\n        const progress = Math.floor((seconds / 60) * 100);\n        setProgress(progress);\n    }, [seconds]);\n\n    useEffect(() => {\n        setLapItems(generateLapItems(lapData));\n    }, [lapData]);\n\n    function toggleStopwatch() {\n        setState((state) => {\n            const paused = !state.paused;\n            const newState = {\n                paused,\n            };\n            const now = Date.now();\n            if (paused) {\n                if (state.lastStarted != null)\n                    newState.timed = now - state.lastStarted + state.timed;\n                newState.lastStarted = null;\n            } else {\n                setIsZero(false);\n                newState.lastStarted = now;\n                if (state.timed === 0) {\n                }\n            }\n            return { ...state, ...newState };\n        });\n    }\n\n    function resetStopwatch() {\n        setState(defaultStopwatchState);\n        setIsZero(true);\n        setDisplayTime(calculateDisplayTime(defaultStopwatchState));\n        setLapData([]);\n    }\n\n    function shareStopwatch() {\n        const textTime = generateTextTime(displayTime, true);\n        const _lapData = [...lapData].reverse();\n        var lapMessage = \"\";\n        if (_lapData.length > 0) {\n            lapMessage = \"\\nLap time(s):\";\n            _lapData.forEach((lapItem, i) => {\n                const deltaTime = calculateDisplayTime({\n                    paused: true,\n                    timed: lapItem.delta,\n                });\n                const deltaTextTime = generateTextTime(deltaTime);\n                lapMessage += `\\n${i + 1}. ${deltaTextTime}`;\n            });\n        }\n\n        const message = `My time is ${textTime}${lapMessage}`;\n        const url = `https://wa.me/?text=${encodeURIComponent(message)}`;\n        window.open(url, \"_blank\");\n    }\n\n    function lapStopwatch() {\n        setState((state) => {\n            const newState = {};\n            newState.laps = state.laps || [];\n            newState.laps.push(total);\n            setLapData(calculateLapData(newState.laps));\n            return { ...state, ...newState };\n        });\n    }\n\n    return (\n        <Container\n            style={{\n                marginTop: \"16px\",\n            }}\n        >\n            <Container style={{ textAlign: \"center\" }}>\n                <Typography\n                    variant=\"h3\"\n                    className={classes.time}\n                    color=\"primary\"\n                >\n                    {textTime}\n                </Typography>\n                <LinearProgress\n                    value={progress}\n                    variant=\"determinate\"\n                    style={{\n                        margin: \"auto\",\n                        maxWidth: \"300px\",\n                    }}\n                />\n\n                <Divider style={{ marginTop: \"16px\" }} />\n            </Container>\n            <Container>{lapItems}</Container>\n            <Container className={classes.spacer}></Container>\n            <Container className={classes.controls}>\n                <Grid container align=\"center\" justify=\"center\">\n                    <Grid\n                        item\n                        xs={4}\n                        className={classes.flex}\n                        style={{\n                            justifyContent: \"flex-end\",\n                        }}\n                    >\n                        {!isZero && (\n                            <Button onClick={resetStopwatch}>Reset</Button>\n                        )}\n                    </Grid>\n                    <Grid item xs={4}>\n                        <Fab\n                            color=\"primary\"\n                            aria-label=\"add\"\n                            onClick={toggleStopwatch}\n                        >\n                            {paused ? (\n                                <PlayArrowOutlinedIcon />\n                            ) : (\n                                <PauseOutlinedIcon />\n                            )}\n                        </Fab>\n                    </Grid>\n                    <Grid item xs={4} className={classes.flex}>\n                        {!isZero &&\n                            (paused ? (\n                                <Button onClick={shareStopwatch}>Share</Button>\n                            ) : (\n                                <Button onClick={lapStopwatch}>Lap</Button>\n                            ))}\n                    </Grid>\n                </Grid>\n            </Container>\n        </Container>\n    );\n};\n\nexport default StopwatchPage;\n","const myRoutes = {\n    clock: \"/\",\n    timer: \"/timer\",\n    stopwatch: \"/stopwatch\",\n};\n\nexport default myRoutes;\n","import React, { useEffect } from \"react\";\nimport { HashRouter, Route, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n// import Button from \"@material-ui/core/Button\";\n// import CssBaseline from \"@material-ui/core/CssBaseline\";\n// import Paper from \"@material-ui/core/Paper\";\n// import Grid from \"@material-ui/core/Grid\";\n// import Card from \"@material-ui/core/Card\";\n// import CardActions from \"@material-ui/core/CardActions\";\n// import CardContent from \"@material-ui/core/CardContent\";\n// import TextField from \"@material-ui/core/TextField\";\n// import LinearProgress from \"@material-ui/core/LinearProgress\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport TimerOutlinedIcon from \"@material-ui/icons/TimerOutlined\";\nimport AvTimerOutlinedIcon from \"@material-ui/icons/AvTimerOutlined\";\nimport AccessTimeOutlinedIcon from \"@material-ui/icons/AccessTimeOutlined\";\nimport Container from \"@material-ui/core/Container\";\nimport ClockPage from \"./ClockPage\";\nimport TimerPage from \"./TimerPage\";\nimport StopwatchPage from \"./StopwatchPage\";\nimport myRoutes from \"./myRoutes\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n    appbar: {\n        // alignItems: \"center\",\n    },\n    stickToBottom: {\n        width: \"100%\",\n        position: \"fixed\",\n        bottom: 0,\n    },\n}));\n\nfunction getTabIndexByHash() {\n    return Object.values(myRoutes).indexOf(window.location.hash.slice(1));\n}\n\nfunction App() {\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [bottomNavIndex, setBottomNavIndex] = React.useState(() => {\n        return getTabIndexByHash();\n    });\n    const pageNames = [\"Clock\", \"Timer\", \"Stopwatch\"];\n\n    const open = Boolean(anchorEl);\n\n    const handleMenu = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    function hashChange() {\n        setBottomNavIndex(getTabIndexByHash());\n    }\n\n    useEffect(() => {\n        window.addEventListener(\"hashchange\", hashChange);\n        return () => {\n            window.removeEventListener(\"hashchange\", hashChange);\n        };\n    }, []);\n\n    return (\n        <HashRouter basename={myRoutes.clock}>\n            <div className={classes.root}>\n                <AppBar\n                    color=\"secondary\"\n                    elevation=\"0\"\n                    position=\"sticky\"\n                    className={classes.appbar}\n                >\n                    <Toolbar>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {pageNames[bottomNavIndex]}\n                        </Typography>\n                        <div>\n                            <IconButton\n                                aria-label=\"account of current user\"\n                                aria-controls=\"menu-appbar\"\n                                aria-haspopup=\"true\"\n                                onClick={handleMenu}\n                                color=\"inherit\"\n                            >\n                                <MoreVertIcon></MoreVertIcon>\n                            </IconButton>\n                            <Menu\n                                id=\"menu-appbar\"\n                                anchorEl={anchorEl}\n                                anchorOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                keepMounted\n                                transformOrigin={{\n                                    vertical: \"top\",\n                                    horizontal: \"right\",\n                                }}\n                                open={open}\n                                onClose={handleClose}\n                            >\n                                <MenuItem onClick={handleClose}>\n                                    Screensaver\n                                </MenuItem>\n                                <MenuItem onClick={handleClose}>\n                                    Settings\n                                </MenuItem>\n                                <MenuItem\n                                    onClick={() => {\n                                        window.localStorage.clear();\n                                        window.location.reload(false);\n                                    }}\n                                >\n                                    Clear Storage\n                                </MenuItem>\n                            </Menu>\n                        </div>\n                    </Toolbar>\n                </AppBar>\n                <Container>\n                    <Route exact path={myRoutes.clock} component={ClockPage} />\n                    <Route exact path={myRoutes.timer} component={TimerPage} />\n                    <Route\n                        exact\n                        path={myRoutes.stopwatch}\n                        component={StopwatchPage}\n                    />\n                </Container>\n                <BottomNavigation\n                    value={bottomNavIndex}\n                    onChange={(event, newValue) => setBottomNavIndex(newValue)}\n                    showLabels\n                    className={classes.stickToBottom}\n                >\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.clock}\n                        label={pageNames[0]}\n                        icon={<AccessTimeOutlinedIcon />}\n                    />\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.timer}\n                        label={pageNames[1]}\n                        icon={<AvTimerOutlinedIcon />}\n                    />\n                    <BottomNavigationAction\n                        component={Link}\n                        to={myRoutes.stopwatch}\n                        label={pageNames[2]}\n                        icon={<TimerOutlinedIcon />}\n                    />\n                </BottomNavigation>\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nimport {\n    createMuiTheme,\n    // makeStyles,\n    ThemeProvider,\n} from \"@material-ui/core/styles\";\n\nconst feliOrange = \"#f9a825\";\nconst backgroundColor = \"#111111\";\n\nconst theme = createMuiTheme({\n    palette: {\n        type: \"dark\",\n        primary: { main: feliOrange },\n        secondary: {\n            main: backgroundColor,\n        },\n        background: {\n            default: backgroundColor,\n            paper: \"#1e1e1e\",\n        },\n    },\n});\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}